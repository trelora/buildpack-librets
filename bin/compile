#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

cat > ${BUILD_DIR}/libRETS-Aptfile <<EOF
default-jre
libexpat1-dev
libboost-dev
libboost-filesystem-dev
swig
EOF


function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_SOURCELIST_DIR="$CACHE_DIR/apt/sources"   # place custom sources.list here

APT_SOURCES="$APT_SOURCELIST_DIR/sources.list"

if [ -f $APT_CACHE_DIR/libRETS-Aptfile ] && cmp -s $BUILD_DIR/libRETS-Aptfile $APT_CACHE_DIR/libRETS-Aptfile ; then
  # Old libRETS-Aptfile is the same as new
  topic "Reusing cache"
else
  # libRETS-Aptfile changed or does not exist
  topic "Detected libRETS-Aptfile changes, flushing cache"
  rm -rf $APT_CACHE_DIR
  mkdir -p "$APT_CACHE_DIR/archives/partial"
  mkdir -p "$APT_STATE_DIR/lists/partial"
  mkdir -p "$APT_SOURCELIST_DIR"   # make dir for sources
  cp -f "$BUILD_DIR/libRETS-Aptfile" "$APT_CACHE_DIR/libRETS-Aptfile"
  cat "/etc/apt/sources.list" > "$APT_SOURCES"    # no cp here
  # add custom repositories from libRETS-Aptfile to sources.list
  # like>>    :repo:deb http://cz.archive.ubuntu.com/ubuntu artful main universe
  topic "Adding custom repositories"
  cat $BUILD_DIR/libRETS-Aptfile | grep -s -e "^:repo:" | sed 's/^:repo:\(.*\)\s*$/\1/g' >> $APT_SOURCES
fi

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
APT_OPTIONS="$APT_OPTIONS -o dir::etc::sourcelist=$APT_SOURCES"

topic "Updating apt caches"
apt-get $APT_OPTIONS update | indent

for PACKAGE in $(cat $BUILD_DIR/libRETS-Aptfile | grep -v -s -e "^:repo:"); do
  if [[ $PACKAGE == *deb ]]; then
    PACKAGE_NAME=$(basename $PACKAGE .deb)
    PACKAGE_FILE=$APT_CACHE_DIR/archives/$PACKAGE_NAME.deb

    topic "Fetching $PACKAGE"
    curl -s -L -z $PACKAGE_FILE -o $PACKAGE_FILE $PACKAGE 2>&1 | indent
  else
    topic "Fetching .debs for $PACKAGE"
    apt-get $APT_OPTIONS -y --force-yes -d install --reinstall $PACKAGE | indent
  fi
done

mkdir -p $BUILD_DIR/.librets

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.librets/
done

topic "Writing profile script"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
export PATH="\$HOME/.librets/usr/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.librets/usr/lib/x86_64-linux-gnu:\$HOME/.librets/usr/lib/i386-linux-gnu:\$HOME/.librets/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.librets/usr/lib/x86_64-linux-gnu:\$HOME/.librets/usr/lib/i386-linux-gnu:\$HOME/.librets/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.librets/usr/include:\$HOME/.librets/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.librets/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.librets/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.librets/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
EOF

export PATH="$BUILD_DIR/.librets/usr/bin:$PATH"
export LD_LIBRARY_PATH="$BUILD_DIR/.librets/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.librets/usr/lib/i386-linux-gnu:$BUILD_DIR/.librets/usr/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$BUILD_DIR/.librets/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.librets/usr/lib/i386-linux-gnu:$BUILD_DIR/.librets/usr/lib:$LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/.librets/usr/include:$BUILD_DIR/.librets/usr/include/x86_64-linux-gnu:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="$BUILD_DIR/.librets/usr/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/.librets/usr/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/.librets/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

#give environment to later buildpacks
export | grep -E -e ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)='  > "$LP_DIR/export"

topic "Rewrite package-config files"
find $BUILD_DIR/.librets -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$BUILD_DIR"'/.librets\1!g'

echo "-----> Installing libRETS"
git clone https://github.com/trelora/libRETS.git "$1/libRETS"
cd "$BUILD_DIR/libRETS"
./autogen.sh
mkdir -p "$BUILD_DIR/vendor"
ln -s "$BUILD_DIR/.librets/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java" "$BUILD_DIR/.librets/usr/bin/java"
java -version
SWIG_LIB="$BUILD_DIR/.librets/usr/share/swig3.0" ./configure --disable-dotnet --disable-java --disable-perl --disable-php --disable-python --disable-python3 --disable-node.js --prefix="$BUILD_DIR/vendor" --with-boost-prefix="$BUILD_DIR/.librets/usr" --with-java-prefix="$BUILD_DIR/.librets/usr"
SWIG_LIB="$BUILD_DIR/.librets/usr/share/swig3.0" make
SWIG_LIB="$BUILD_DIR/.librets/usr/share/swig3.0" make install
